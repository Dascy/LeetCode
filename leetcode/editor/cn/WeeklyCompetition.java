import java.util.Arrays;import java.util.concurrent.atomic.AtomicInteger;/** * @author dongjunzhi * @Title: WeeklyCompetition * @ProjectName LeetCode * @Description: TODO * @create 2024/7/7 10:22 */public class WeeklyCompetition {    public static void main(String[] args) {        System.out.println(2&3);    }    public int numberOfSubmatrices(char[][] grid) {        int n = grid.length;        int m = grid[0].length;        int ans=0;        int[][][] sum = new int[n+1][m+1][2];        for (int i = 0; i < n; i++) {            for (int j = 0; j < m; j++) {                sum[i+1][j+1][0] = sum[i+1][j][0]+sum[i][j+1][0]-sum[i][j][0];                sum[i+1][j+1][1] = sum[i+1][j][1]+sum[i][j+1][1]-sum[i][j][1];                if (grid[i][j]!='.'){                    sum[i+1][j+1][grid[i][j]&1] +=1;                }                if (sum[i + 1][j + 1][0] > 0 && sum[i + 1][j + 1][0] == sum[i + 1][j + 1][1]) {                    ans++;                }            }        }        return ans;    }    public String getEncryptedString(String s, int k) {        int n = s.length();        char[] chars = new char[n + k];        for (int i = 0; i < n + k; i++) {            if (i >= n) {                chars[i] = s.charAt(i % n);            } else {                chars[i] = s.charAt(i);            }        }        char[] array = s.toCharArray();        for (int i = 0; i < array.length; i++) {            array[i] = chars[i + k];        }        return new String(array);    }}